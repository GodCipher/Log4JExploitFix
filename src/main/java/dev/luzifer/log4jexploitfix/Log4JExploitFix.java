package dev.luzifer.log4jexploitfix;

import com.comphenix.protocol.PacketType;
import com.comphenix.protocol.ProtocolLibrary;
import com.comphenix.protocol.ProtocolManager;
import com.comphenix.protocol.events.ListenerPriority;
import com.comphenix.protocol.events.PacketAdapter;
import com.comphenix.protocol.events.PacketContainer;
import com.comphenix.protocol.events.PacketEvent;
import com.comphenix.protocol.wrappers.WrappedChatComponent;
import dev.luzifer.log4jexploitfix.events.PlayerMaliciousChatEvent;
import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.plugin.Plugin;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.scheduler.BukkitRunnable;

import java.util.Locale;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public final class Log4JExploitFix extends JavaPlugin {
    static final Pattern pattern = Pattern.compile(".*\\$\\{[^}]*\\}.*");
    private final Logger logger = getLogger();
    
    private ProtocolManager protocolManager;
    
    @Override
    public void onLoad() {
        
        AppenderFilter.tryApply(this.logger);
        protocolManager = ProtocolLibrary.getProtocolManager();
    }
    
    @Override
    public void onEnable() {
        protocolManager.addPacketListener(new PacketAdapter(this, ListenerPriority.LOWEST,
                PacketType.Play.Server.CHAT, PacketType.Play.Client.CHAT) {

            @Override
            public void onPacketSending(PacketEvent event) {
                
                if(event.getPacketType() == PacketType.Play.Server.CHAT) {
                
                    PacketContainer packetContainer = event.getPacket();
                    
                    WrappedChatComponent wrappedChatComponent = packetContainer.getChatComponents().getValues().get(0);
                    if(wrappedChatComponent == null) return;
                    
                    String jsonMessage = wrappedChatComponent.getJson();
                    if(jsonMessage.indexOf('$') == -1) return;
                    
                    if(matches(jsonMessage)) {
    
                        event.setCancelled(true);
                        packetContainer.getChatComponents().write(0,  WrappedChatComponent.fromText(""));
                    }
                }
            }
    
            @Override
            public void onPacketReceiving(PacketEvent event) {
                
                if(event.getPacketType() == PacketType.Play.Client.CHAT) {
    
                    Player player = event.getPlayer();
                    PacketContainer packetContainer = event.getPacket();
                    
                    String message = packetContainer.getStrings().read(0);
                    if(message.indexOf('$') == -1) return;
                    
                    if(matches(message)) {
    
                        event.setCancelled(true);
                        packetContainer.getStrings().write(0, "");
    
                        logger.severe(player.getName() + " just tried something malicious");

                        // call event sync
                        new BukkitRunnable() {
                            @Override
                            public void run() {
                                Bukkit.getPluginManager().callEvent(new PlayerMaliciousChatEvent(player, message));
                            }
                        }.runTask(Log4JExploitFix.this);
                    }
                
                }
            }
    
            private boolean matches(String message) {
                Matcher matcher = pattern.matcher(message.replaceAll("[^\\x00-\\x7F]", "").toLowerCase(Locale.ROOT));
                return matcher.find();
            }
        });
    }
    
    @Override
    public void onDisable() {}
}
